!******************************************************************************
!
!   FILE
!       reg_dbg.mac
!
!   DESCRIPTION
!       Utilities 
!   RCS
!
!
!******************************************************************************



!******************************************************************************
!                       E X P O R T S
!******************************************************************************
!
!       GetRegNames$
!       GetRegObjs$
!       GetItems$
!       GetTabItems$
!       GetTabColHdr$
!       GetTabHeader$
!       GetElement$
!       Register

!       RemoveMtregdbg

!******************************************************************************
!                       M A C R O S
!******************************************************************************

!******************************************************************************
!
NAME  RemoveMtregdbg
!
!   DESCRIPTION
!       Removes this tool
!
!   RETURN
!       None
!******************************************************************************

    Remove     GetRegNames$
    Remove     GetRegObjs$
    Remove     GetItems$
    Remove     GetTabItems$
    Remove     GetTabColHdr$
    Remove     GetTabHeader$
    Remove     GetElement$
    Remove     Register

    Remove     RemoveMtregdbg

ENDMACRO

!******************************************************************************
!
NAME  GetRegNames$
!
!   DESCRIPTION
!       Get list of existing Registers
!       Get total number of Registers
!
!   RETURN
!       Register names separated with "|"
!******************************************************************************

    LOCAL i,x                            ! Register count
    LOCAL H$, R$                         ! Register name

    i = 0                                ! initialize
    H$ =""                               ! initialize
    Repeat
        i = i + 1                        ! increment counter
        R$ = RegName$(i)                 ! get name
        x = Len(R$)                      ! until last
        if x > 0 then                    ! last
            if i = 1 then                ! first
                H$ = R$                  ! set
            else
                H$ = H$ + "|"+ R$        ! add name
            endif
        endif
    Until (x = 0)                        ! until last
    i = i - 1         
    NumRet = i                           ! Return Number       
    Return H$

ENDMACRO

!******************************************************************************
!
NAME  GetRegObjs$
!
!   DESCRIPTION
!       Get list of Objects in a Register
!       Get total number of objects
!
!   RETURN
!       Object names separated with "|"
!******************************************************************************

    Parameter RName$  DEFAULT ""

    LOCAL i,x,k                          ! Object count
    LOCAL H$, R$, T$                     ! Object names

    x = Len(RName$)                      ! get
    if x = 0 then
        RName$ = RegName$(1)             ! get first register name
    endif
    Evaluate "i = RegSize("+RName$+")"   ! initialize
    NumRet = i                           ! pass total
    if i > 0 then                        ! only if available
        Evaluate "R$ = ""[""+Val$(ObjHdrVal("+RName$+"[1],""ObjClass""))"+\
                 "+""] ""+ObjHdrText$("+RName$+"[1],""Title"")" 
        H$ = "1 " + R$                   ! set name 
        For x = 2 to i                   ! list all obj names and types
            Evaluate "R$ = ""[""+Val$(ObjHdrVal("+RName$+ \
                           "["+Val$(x)+"],""ObjClass""))+""] ""+"+ \
                           "ObjHdrText$("+ RName$+"["+Val$(x)+"],""Title"")" 
            H$ = H$ + "|" + Val$(x) + " " + R$      ! add name
        Next x
    endif

    Return H$
 

ENDMACRO

!******************************************************************************
!   
NAME  GetItems$
!
!   DESCRIPTION
!       Get list of Item names and Content
!       Total Number of Items
!
!   RETURN
!       List separated with "|"
!******************************************************************************

    Parameter RegObj$  DEFAULT ""

    LOCAL i,x,k,l                        ! local variables
    LOCAL A$,H$,R$,S$,X$                 ! local strings

    x = Len(RegObj$)                     ! get
    if x = 0 then
        RegObj$ = RegName$(1) + "[1]"    ! first register, first object
    endif

    i = 1                                ! initialize
    H$ =""                               ! initialize
    R$ =""                               ! initialize
    S$ =""                               ! initialize
    X$ =""                               ! initialize
    Repeat
        Evaluate "R$ = ObjHdrName$(" + RegObj$ + "," + Val$(i) + ")" ! get item name
        x = Len(R$)

        if x > 0 then
            A$ = RegObj$ + ","""  +  R$ + """"
            Evaluate "k = ObjHdrType(" + A$ + ")" ! get item type
            if k = 0 then
                Evaluate "S$ = ObjHdrText$(" + A$ + ")"  ! get string
                l = Instr(S$,"|")
                if l > 0 then
                    X$ = R$ + " : (list)" ! indicate list
                else
                    Evaluate "X$ = R$ + "" : "" + S$"
                endif
            else
                if k = 1 then
                    Evaluate "X$ = R$ + "" : "" + Val$(ObjHdrVal(" + A$ + "))" ! get scalar
                else
                    X$ = R$ + " : (table)"
                endif
            endif
            If i = 1 then
                H$ = X$                  ! set first item 
            else
                H$ = H$ + "|"+ X$        ! add item
            endif
            i = i + 1                    ! increment counter
        endif
    Until (x = 0)                        ! until last
    i = i - 1                            ! correct number

    EVALUATE "k=DataCols("+RegObj$+")"
    IF k > 0 THEN
        i = i + 1
        x$ = "DataCols : "+val$(k)+"    (Data Block)"
        If i = 1 then
            H$ = X$                  ! set first item
        else
            H$ = H$ + "|"+ X$        ! add item
        endif

    ENDIF

    NumRet = i                           ! return total
    Return H$


ENDMACRO

!******************************************************************************
!   
NAME  GetTabItems$
!
!   DESCRIPTION
!       Get list of Tab Items and Value
!       Total Number of Items
!
!   RETURN
!       List separated with "|"
!******************************************************************************

    Parameter RegObj$  DEFAULT ""
    Parameter TabName$  DEFAULT ""

    LOCAL i,x,k                          ! Item count
    LOCAL H$,R$,X$,A$                    ! Item name

    i = 1                                ! initialize
    H$ =""                               ! initialize
    R$ =""                               ! initialize
    X$ =""                               ! initialize
    Repeat
        Evaluate "R$ = TabHdrName$(" + RegObj$ + ",""" + TabName$ + """," + Val$(i) + ")" ! get item name
        x = Len(R$)

        if x > 0 then
        A$ = RegObj$ + ",""" + TabName$  + ""","""  +  R$ + """"

        IF i < 5 THEN       ! First 4 items are table admin items
            R$ = "(fix) " + R$
        ENDIF
            Evaluate "k = TabHdrType(" + A$ + ")" ! get item type
            if k < 1 then
                Evaluate "X$ = R$ + "" : "" + TabHdrText$(" + A$ + ")" ! get string
            else
                if k = 5 then
                    X$ = R$ + " : (table link)"
                else
                    Evaluate "X$ = R$ + "" : "" + Val$(TabHdrVal(" + A$ + "))" ! get scalar
                endif
            endif
            If i = 1 then
                H$ = X$                  ! set first item 
            else
                H$ = H$ + "|"+ X$        ! add item
            endif
            i = i + 1                    ! increment counter
        endif
    Until (x = 0)                        ! until last
    i = i - 1                            ! correct counter
    NumRet = i                           ! return total
    A$ = RegObj$ + ",""" + TabName$  + """,""NumberOfCol"""
    Evaluate "k = TabHdrVal(" + A$ + ")" ! get scalar
    If k > 0 then 
        X$ = GetTabColHdr$(RegObj$,TabName$,k) ! get Column Header
        H$ = H$ + "|-------------< Column Headers >-------------|" + X$
    endif

    Return H$


ENDMACRO


!******************************************************************************
!   
NAME  GetTabColHdr$
!
!   DESCRIPTION
!       Gets list of Column Headers of a table
!
!   RETURN
!       List separated with "|"
!******************************************************************************

    Parameter RegObj$  DEFAULT ""
    Parameter TabName$  DEFAULT ""
    Parameter MaxCol

    LOCAL i                              ! Item count
    LOCAL H$,X$,A$                       ! Item name

    Evaluate "H$ = ""(ch) ""+TabColName$("+RegObj$+","""+TabName$+""",1)"
                                         ! get first column name
 
    for i = 2 to MaxCol                  ! get all Headers
        A$ = RegObj$ + ",""" + TabName$ + """," + Val$(i)
        Evaluate "X$ = ""(ch) "" + TabColName$(" + A$ + ")" ! get column name
        H$ = H$ + "|"+ X$                ! add item
    next i
    
    Return H$


ENDMACRO


!******************************************************************************
!   
NAME  GetTabHeader$
!
!   DESCRIPTION
!       Gets table header
!
!******************************************************************************

    Parameter RegObj$                    ! Register Object
    Parameter TabName$                   ! Table name

    LOCAL i,x,k                          ! counter, indices
    LOCAL A$,H$,R$,X$                    ! String variables


    i = 1                                ! initialize
    H$ =""                               ! initialize
    R$ =""                               ! initialize
    X$ =""                               ! initialize

    Repeat
        Evaluate "R$ = TabColName$(" + RegObj$ + ",""" + TabName$ + """," + Val$(i) + ")" ! get item name
        x = Len(R$)                      ! Column Header
        if x > 0 then                    ! Column exists
            A$ = RegObj$ + ",""" + TabName$  + ""","""  +  R$ + """"
            If i = 1 then                ! first column
                H$ = X$                  ! set mask
            else
                H$ = H$ + "|" + X$       ! add mask
            endif
            i = i + 1                    ! increment counter
        endif
    Until (x = 0)                        ! until last
    Return H$

ENDMACRO


!******************************************************************************
!
NAME  GetElement$
!
!   DESCRIPTION
!       Get element of list
!
!   RETURN
!       Element$
!******************************************************************************

    Parameter List$  DEFAULT ""          ! empty as default
    Parameter BName$  DEFAULT "Select"   ! default
    Parameter BText$  DEFAULT ""         ! default
      
    LOCAL Element$                       ! Item name

    RemoveDialog("GetItemBox")

    Element$ = ""                        ! Initialize no selection

    BeginDialog "GetItemBox", 20, 10, 250, 400, BName$
        staticText  5,  3, 100,  10, BText$
        ListBox 5,15,230,375, List$, Element$
        okButton     5, 385, 45, 12, "OK"
        cancelButton 90, 385, 45, 12, "Cancel"
    EndDialog 

    H = ShowDialog("GetItemBox")

    Return Element$

EndMacro

!******************************************************************************
!
NAME  Register
!
!   DESCRIPTION
!       See Structure
!
!******************************************************************************

    LOCAL u,v,w
    Local _WinDebug

    _WinDebug = FreeWin(1)                       ! search free user window
    if _WinDebug > 10 then 
        _WinDebug = Alert("User windows 1-10 in use!"+Chr$(10)+Chr$(10)+Chr$(13)+\
                          "Please close a user window before starting this tool."+\
                          Chr$(10)+Chr$(13)+\
                          "(often user window titles start ' # X   - > ';"+Chr$(10)+Chr$(13)+\
                          " use F11 to toggle currently open windows)"\
                          ,3,"Show Register")
        Return
    endif

    NumRet = 0                                   ! initialize
    Print "Select Register"
    H$ = GetRegNames$()                          ! get List of registers
    X$ = "Total number of Registers: " + Val$(NumRet) 
    H$ = GetElement$(H$,"Registers",X$)
    If Len(H$) > 0 then 
        Print "Select Object in Register " + H$
        X$ = GetRegObjs$(H$)                     ! get List of objects
        O$ = "Total number of Objects: " + Val$(NumRet)
        O$ = GetElement$(X$,"Objects in " + H$,O$)
        If Len(O$) > 0 then 
            Print "List of Items of Object " + Val$(Val(O$))
            I$ = H$ + "[" + Val$(Val(O$)) + "]"
            X$ = GetItems$(I$)                   ! get List of items
            H$ = "Total number of Items: " + Val$(NumRet)
            H$ = GetElement$(X$,O$,H$)
            If Len(H$) > 0 then
                h = Instr(H$," : (table)")
                If h > 0 Then
                    O$ = H$[1:h-1] 
                    Print O$
                    Print "List of Items of Table " + O$
                    X$ = GetTabItems$(I$,O$)         ! get List of tab items
                    T$ = "Total number of Items: " + Val$(NumRet)
                    T$ = GetElement$(X$,O$,T$)
                    If len (T$) > 0 then
                        u = Instr(T$,"(fix)")
                        v = Instr(T$,"(ch)")
                        w = Instr(T$,"< Column Headers >")
                        IF (u > 0) OR ( v > 0 ) OR ( w > 0 ) THEN
                            Evaluate "EdTab " + Val$(_WinDebug) + "," +  \
                                      I$ + ",""" + O$ + """"
                        ELSE
                            u = Instr(T$," :")                ! search
                            if u > 0 then
                                h$ = T$[1:u-1]                ! get Item
                            endif
                            A$ = I$+","""+O$+""","""+H$+""""  ! get ID
                            Evaluate "k = TabHdrType("+A$+")" ! get item type
                            if k = 0 then
                                Evaluate "T$=TabHdrText$("+A$+")" ! get string
                            endif
                            if k = 1 then
                                Evaluate "T$=Val$(TabHdrVal("+A$+"))" ! get scalar
                            endif
                            h = Input(H$,T$)
                            if h = 1 then                     ! set new string/value
                                if k = 0 then
                                    Evaluate "SetTabHdrText "+A$+","""+T$+""""! set string
                                endif
                                if k = 1 then
                                    Evaluate "SetTabHdrVal "+A$+","+T$ ! set value
                                endif
                            endif

                        ENDIF
                    endif
                else
                    h = Instr(H$,"(Data Block)")

                    If h > 0 Then
                        PRINT "List of Data Block Hdr Items not yet implemented"
                        Evaluate "EddataTab "+Val$(_WinDebug)+","+I$
                else
                    h = Instr(H$," : (list)")
                    If h > 0 Then
                        O$ = H$[1:h-1] 
                        Print O$
                        Print "List of Elements " + O$
                        Evaluate "X$ = ObjHdrText$(" + I$ + ",""" + O$ + """)"  ! get string
                        T$ = "List of elements:"
                        T$ = GetElement$(X$,O$,T$)
                    endif
                    h = Instr(H$," :")                ! search
                    if h > 0 then 
                        O$ = H$[1:h-1]                ! get Item
                    endif
                    A$ = I$ + ","""  +  O$ + """"     ! get ID
                    Evaluate "k = ObjHdrType(" + A$ + ")" ! get item type
                    if k = 0 then
                        Evaluate "T$ = ObjHdrText$(" + A$ + ")" ! get string
                    endif
                    if k = 1 then
                        Evaluate "T$ = Val$(ObjHdrVal(" + A$ + "))" ! get scalar
                    endif
                    h = Input(H$,T$)
                    if h = 1 then                     ! set new string/value
                        if k = 0 then
                            Evaluate "SetObjHdrText " + A$ + ",""" + T$ + """" ! set string
                        endif
                        if k = 1 then
                            Evaluate "SetObjHdrVal " + A$ + "," + T$  ! set value
                        endif
                    endif
                endif
                endif
            endif
        endif
    endif
    Print                                       ! clear CL

EndMacro

!******************************************************************************
!                       A U T O S T A R T
!******************************************************************************

MenuAdd "&Debug", ,"SEPARATOR"
MenuAdd "&Debug", "Show &Registers","Register",,"Show register structure"